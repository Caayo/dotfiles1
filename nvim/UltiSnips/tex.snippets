# include this code block at the top of a *.snippets file...
# ----------------------------- #
global !p
def math():
  return vim.eval('vimtex#syntax#in_mathzone()') == '1'
endglobal
# ----------------------------- #
# ...then place 'context "math()"' above any snippets you want to expand only in math mode


context "math()"
snippet tt "The \texttt{} command for typewriter-style font"
\texttt{${1:text}}$0
endsnippet

context "math()"
snippet tii "The \textit{} command for italic font"
\textit{${1:${VISUAL:}}}$0
endsnippet

context "math()"
snippet ff "The LaTeX \frac{}{} command"
\frac{$1}{$2}$0
endsnippet

snippet env "New LaTeX environment" b
\begin{$1}
	$2
\end{$1}
$0
endsnippet

snippet nn "New equation environment" b
\begin{equation*}
	$1
\end{equation*}
$0
endsnippet

snippet nnn "New numbered equation environment" b
\begin{equation}
	$1
\end{equation}
$0
endsnippet

context "math()"
snippet a= "Align &= insert"
&=
endsnippet

context "math()"
snippet nl "New Line"
\\\\
endsnippet


# ----------- [regex triggers] --------- #

snippet "(^|[^a-zA-Z])mm" "Inline LaTeX math" rA
`!p snip.rv = match.group(1)`\$ ${1:${VISUAL:}} \$$0
endsnippet

snippet "([^a-zA-Z])ee" "e^{} supercript" rA
`!p snip.rv = match.group(1)`e^{${1:${VISUAL:}}}$0
endsnippet


snippet "(^|[^a-zA-Z])ff" "\frac{}{}" rA
`!p snip.rv = match.group(1)`\frac{${1:${VISUAL:}}}{$2}$0
endsnippet


snippet "([\w])trigger" "Expands if 'trigger' is typed after 0-9, a-z, and  A-Z" r
`!p snip.rv = match.group(1)`snippet body
endsnippet

# Of course, modify the }, ), ], and | characters as you wish
snippet "([\w]|[\}\)\]\|])trigger" "Expands after 0-9, a-z, A-Z and }, ), ], and |" r
`!p snip.rv = match.group(1)`snippet body
endsnippet

# This trigger suppresses expansion after numbers
snippet "([a-zA-Z]|[\}\)\]\|])trigger" "Expands after a-z, A-Z and }, ), ], and |" r
`!p snip.rv = match.group(1)`snippet body
endsnippet

snippet "([a-zA-Z]|[\}\)\]\|'])00" "Automatic 0 subscript" rA
`!p snip.rv = match.group(1)`_{0}
endsnippet

snippet "([^a-zA-Z0-9])df" "\diff (A personal command I universally use for differentials)" rA
`!p snip.rv = match.group(1)`\diff 
endsnippet

snippet "([\w]|[\}\)\]\|])sd" "Subscript with upright text" rA
`!p snip.rv = match.group(1)`_{\mathrm{${1:${VISUAL:}}}}$0
endsnippet
